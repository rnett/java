// Targeted by JavaCPP version 1.5.4: DO NOT EDIT THIS FILE

package org.tensorflow.internal.c_api;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.tensorflow.internal.c_api.global.tensorflow.*;


// Vector space for actually computing gradients. Implements methods for calling
// the backward function with incoming gradients and returning the outgoing
// gradient and for performing gradient aggregation.
// See `tensorflow::eager::VSpace` for more details.
@Namespace("tensorflow::gradients") @Properties(inherit = org.tensorflow.internal.c_api.presets.tensorflow.class)
public class TapeVSpace extends org.tensorflow.internal.c_api.AbstractTapeVSpace {
    static { Loader.load(); }
    /** Default native constructor. */
    public TapeVSpace() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TapeVSpace(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TapeVSpace(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TapeVSpace position(long position) {
        return (TapeVSpace)super.position(position);
    }
    @Override public TapeVSpace getPointer(long i) {
        return new TapeVSpace(this).position(position + i);
    }


  // Returns the number of elements in the gradient tensor.

  // Consumes references to the tensors in the gradient_tensors list and returns
  // a tensor with the result.

  // Calls the passed-in backward function.

  // Builds a tensor filled with ones with the same shape and dtype as `t`.

  // Looks up the ID of a Gradient.

  // Converts a Gradient to a TapeTensor.
}
